package com.briup.sports.bean;

import java.util.ArrayList;
import java.util.List;

public class WeightExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public WeightExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWeightIdIsNull() {
            addCriterion("weight_id is null");
            return (Criteria) this;
        }

        public Criteria andWeightIdIsNotNull() {
            addCriterion("weight_id is not null");
            return (Criteria) this;
        }

        public Criteria andWeightIdEqualTo(String value) {
            addCriterion("weight_id =", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdNotEqualTo(String value) {
            addCriterion("weight_id <>", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdGreaterThan(String value) {
            addCriterion("weight_id >", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdGreaterThanOrEqualTo(String value) {
            addCriterion("weight_id >=", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdLessThan(String value) {
            addCriterion("weight_id <", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdLessThanOrEqualTo(String value) {
            addCriterion("weight_id <=", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdLike(String value) {
            addCriterion("weight_id like", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdNotLike(String value) {
            addCriterion("weight_id not like", value, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdIn(List<String> values) {
            addCriterion("weight_id in", values, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdNotIn(List<String> values) {
            addCriterion("weight_id not in", values, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdBetween(String value1, String value2) {
            addCriterion("weight_id between", value1, value2, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightIdNotBetween(String value1, String value2) {
            addCriterion("weight_id not between", value1, value2, "weightId");
            return (Criteria) this;
        }

        public Criteria andWeightNumIsNull() {
            addCriterion("weight_num is null");
            return (Criteria) this;
        }

        public Criteria andWeightNumIsNotNull() {
            addCriterion("weight_num is not null");
            return (Criteria) this;
        }

        public Criteria andWeightNumEqualTo(Double value) {
            addCriterion("weight_num =", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumNotEqualTo(Double value) {
            addCriterion("weight_num <>", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumGreaterThan(Double value) {
            addCriterion("weight_num >", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumGreaterThanOrEqualTo(Double value) {
            addCriterion("weight_num >=", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumLessThan(Double value) {
            addCriterion("weight_num <", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumLessThanOrEqualTo(Double value) {
            addCriterion("weight_num <=", value, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumIn(List<Double> values) {
            addCriterion("weight_num in", values, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumNotIn(List<Double> values) {
            addCriterion("weight_num not in", values, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumBetween(Double value1, Double value2) {
            addCriterion("weight_num between", value1, value2, "weightNum");
            return (Criteria) this;
        }

        public Criteria andWeightNumNotBetween(Double value1, Double value2) {
            addCriterion("weight_num not between", value1, value2, "weightNum");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceIsNull() {
            addCriterion("goal_distance is null");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceIsNotNull() {
            addCriterion("goal_distance is not null");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceEqualTo(Double value) {
            addCriterion("goal_distance =", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceNotEqualTo(Double value) {
            addCriterion("goal_distance <>", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceGreaterThan(Double value) {
            addCriterion("goal_distance >", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceGreaterThanOrEqualTo(Double value) {
            addCriterion("goal_distance >=", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceLessThan(Double value) {
            addCriterion("goal_distance <", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceLessThanOrEqualTo(Double value) {
            addCriterion("goal_distance <=", value, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceIn(List<Double> values) {
            addCriterion("goal_distance in", values, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceNotIn(List<Double> values) {
            addCriterion("goal_distance not in", values, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceBetween(Double value1, Double value2) {
            addCriterion("goal_distance between", value1, value2, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andGoalDistanceNotBetween(Double value1, Double value2) {
            addCriterion("goal_distance not between", value1, value2, "goalDistance");
            return (Criteria) this;
        }

        public Criteria andWeightDateIsNull() {
            addCriterion("weight_date is null");
            return (Criteria) this;
        }

        public Criteria andWeightDateIsNotNull() {
            addCriterion("weight_date is not null");
            return (Criteria) this;
        }

        public Criteria andWeightDateEqualTo(String value) {
            addCriterion("weight_date =", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateNotEqualTo(String value) {
            addCriterion("weight_date <>", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateGreaterThan(String value) {
            addCriterion("weight_date >", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateGreaterThanOrEqualTo(String value) {
            addCriterion("weight_date >=", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateLessThan(String value) {
            addCriterion("weight_date <", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateLessThanOrEqualTo(String value) {
            addCriterion("weight_date <=", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateLike(String value) {
            addCriterion("weight_date like", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateNotLike(String value) {
            addCriterion("weight_date not like", value, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateIn(List<String> values) {
            addCriterion("weight_date in", values, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateNotIn(List<String> values) {
            addCriterion("weight_date not in", values, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateBetween(String value1, String value2) {
            addCriterion("weight_date between", value1, value2, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightDateNotBetween(String value1, String value2) {
            addCriterion("weight_date not between", value1, value2, "weightDate");
            return (Criteria) this;
        }

        public Criteria andWeightChangeIsNull() {
            addCriterion("weight_change is null");
            return (Criteria) this;
        }

        public Criteria andWeightChangeIsNotNull() {
            addCriterion("weight_change is not null");
            return (Criteria) this;
        }

        public Criteria andWeightChangeEqualTo(Double value) {
            addCriterion("weight_change =", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeNotEqualTo(Double value) {
            addCriterion("weight_change <>", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeGreaterThan(Double value) {
            addCriterion("weight_change >", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeGreaterThanOrEqualTo(Double value) {
            addCriterion("weight_change >=", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeLessThan(Double value) {
            addCriterion("weight_change <", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeLessThanOrEqualTo(Double value) {
            addCriterion("weight_change <=", value, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeIn(List<Double> values) {
            addCriterion("weight_change in", values, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeNotIn(List<Double> values) {
            addCriterion("weight_change not in", values, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeBetween(Double value1, Double value2) {
            addCriterion("weight_change between", value1, value2, "weightChange");
            return (Criteria) this;
        }

        public Criteria andWeightChangeNotBetween(Double value1, Double value2) {
            addCriterion("weight_change not between", value1, value2, "weightChange");
            return (Criteria) this;
        }

        public Criteria andMemberIdIsNull() {
            addCriterion("member_id is null");
            return (Criteria) this;
        }

        public Criteria andMemberIdIsNotNull() {
            addCriterion("member_id is not null");
            return (Criteria) this;
        }

        public Criteria andMemberIdEqualTo(Integer value) {
            addCriterion("member_id =", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotEqualTo(Integer value) {
            addCriterion("member_id <>", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThan(Integer value) {
            addCriterion("member_id >", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("member_id >=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThan(Integer value) {
            addCriterion("member_id <", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThanOrEqualTo(Integer value) {
            addCriterion("member_id <=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdIn(List<Integer> values) {
            addCriterion("member_id in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotIn(List<Integer> values) {
            addCriterion("member_id not in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdBetween(Integer value1, Integer value2) {
            addCriterion("member_id between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotBetween(Integer value1, Integer value2) {
            addCriterion("member_id not between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberWeightIsNull() {
            addCriterion("member_weight is null");
            return (Criteria) this;
        }

        public Criteria andMemberWeightIsNotNull() {
            addCriterion("member_weight is not null");
            return (Criteria) this;
        }

        public Criteria andMemberWeightEqualTo(Double value) {
            addCriterion("member_weight =", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightNotEqualTo(Double value) {
            addCriterion("member_weight <>", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightGreaterThan(Double value) {
            addCriterion("member_weight >", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightGreaterThanOrEqualTo(Double value) {
            addCriterion("member_weight >=", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightLessThan(Double value) {
            addCriterion("member_weight <", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightLessThanOrEqualTo(Double value) {
            addCriterion("member_weight <=", value, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightIn(List<Double> values) {
            addCriterion("member_weight in", values, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightNotIn(List<Double> values) {
            addCriterion("member_weight not in", values, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightBetween(Double value1, Double value2) {
            addCriterion("member_weight between", value1, value2, "memberWeight");
            return (Criteria) this;
        }

        public Criteria andMemberWeightNotBetween(Double value1, Double value2) {
            addCriterion("member_weight not between", value1, value2, "memberWeight");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_weight
     *
     * @mbg.generated do_not_delete_during_merge Tue May 05 23:52:37 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_weight
     *
     * @mbg.generated Tue May 05 23:52:37 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}